<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>必装软件</title>
      <link href="/2025/06/software_must.html"/>
      <url>/2025/06/software_must.html</url>
      
        <content type="html"><![CDATA[<h1 id="必装软件"><a href="#必装软件" class="headerlink" title="必装软件"></a>必装软件</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Core Temp setup</span><br><span class="line">Snipaste</span><br><span class="line">WindowTop</span><br><span class="line">qbittorrent</span><br><span class="line">Simplenote</span><br><span class="line">Everything</span><br><span class="line">AutoHotkey</span><br><span class="line">Simplenote</span><br><span class="line">Xmind</span><br></pre></td></tr></table></figure><h2 id="办公软件"><a href="#办公软件" class="headerlink" title="办公软件"></a>办公软件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">office</span><br><span class="line">visio</span><br><span class="line">福昕</span><br><span class="line">edge 火狐 谷歌 星火 </span><br><span class="line">Zotero </span><br><span class="line">Pycharm anaconda VScode Matlab </span><br><span class="line">Comsol</span><br><span class="line">typora typora代码块默认语言 Pingo Github desktop中文版 Clash.Verge</span><br></pre></td></tr></table></figure><h2 id="娱乐软件"><a href="#娱乐软件" class="headerlink" title="娱乐软件"></a>娱乐软件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">播放器</span><br><span class="line">百度云 阿里云 <span class="number">123</span>云盘 onedrive</span><br><span class="line">Todesk 贝锐蒲公英 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第五卷</title>
      <link href="/2024/11/Di_wu_juan.html"/>
      <url>/2024/11/Di_wu_juan.html</url>
      
        <content type="html"><![CDATA[<h1 id="第五卷"><a href="#第五卷" class="headerlink" title="第五卷"></a>第五卷</h1><h2 id="出版说明"><a href="#出版说明" class="headerlink" title="出版说明"></a>出版说明</h2><p>伟大的领袖和导师毛泽东主席的著作，是马克思列宁主<br>义的不朽文献。根据中共中央的决定，《毛泽东选集》第五卷现在出版了，以后各卷也将陆续出版。<br>过去出版的《毛泽东选集》第一卷至第四卷，是新民主主义革命时期的重要著作。第五卷和以后各卷，是社会主义革命和社会主义建设时期的重要著作。<br>在中华人民共和国成立以后的新的历史时期，毛泽东同<br>志坚持马克思列宁主义普遍真理和革命具体实践相结合的一贯原则，领导我党和我国人民，在进行社会主义革命和社会主义建设的斗争中，在反对高饶、彭德怀、刘少奇、林彪、王张江姚的修正主义路线的斗争中，在反对帝国主义和各国反动派的斗争中，在反对以苏修叛徒集团为中心的现代修正主义的斗争中，继承、捍卫和发展了马克思列宁主义。这个时期，毛泽东同志在理论上最伟大的贡献，就是系统地总结了我国的和国际的无产阶级专政的历史经验，运用唯物辩证法的对立统一这个基本观点，分析了社会主义社会的矛盾、阶级和阶级斗争，从而揭示了社会主义社会的发展规律，创立了无产阶级专政下继续革命的伟大理论。毛泽东同志关于无产阶级革命和无产阶级专政的这种新思想、新结论，在哲学、政治经济学和科学社会主义方面，极大地丰富了马克思列宁主义的理论宝库。它不仅为我国人民指明了巩固无产阶级专政，防止资本主义复辟，建设社会主义的根本道路，而且具有伟大的深远的世界意义。<br>《毛泽东选集》第五卷是一九四九年九月到一九五七年的重要著作。毛泽东同志关于在生产资料所有制的社会主义改造基本完成以后无产阶级和资产阶级、社会主义道路和资本主义道路的斗争还长期存在的科学论断，关于正确区分和处理社会主义社会中敌我矛盾和人民内部矛盾这两类不同性质的矛盾的学说，关于无产阶级专政下继续革命的伟大理论，关于社会主义建设总路线的基本思想，就是在这卷著作中首次提出的。以后，特别是在无产阶级文化大革命中，毛泽东同志根据革命实践经验，不断地充实和发展了这些光辉思想。<br>毛泽东同志是当代最伟大的马克思列宁主义者。毛泽东<br>思想是我党我军和我国人民团结战斗、继续革命的胜利旗帜，是国际无产阶级和各国革命人民的共同财富。毛泽东同志的思想和学说是永存的。<br>收入选集的毛泽东同志在社会主义革命和社会主义建设<br>时期的著作，有一部分公开发表过，有一部分没有公开发表过，包括毛泽东同志起草的文件、手稿和讲话的正式记录。讲话记录在编辑时作了必要的技术性的整理。<br><code>中共中央毛泽东主席著作编辑出版委员会</code><br>一九七七年三月一日</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>英文写作</title>
      <link href="/2024/07/english_learn.html"/>
      <url>/2024/07/english_learn.html</url>
      
        <content type="html"><![CDATA[<hr><h1 id="英文写作"><a href="#英文写作" class="headerlink" title="英文写作"></a>英文写作</h1><hr><p><code>中文润色</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">作为一名中文学术论文写作改进助理，你的任务是改进所提供文本的拼写、语法、清晰、简洁和整体可读性，同时分解长句，减少重复，并提供改进建议。请先提供文本的更正版本，然后在markdown表格中列出修改的内容，并给出修改的理由:</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>英文润色</code>：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Below is a paragraph from an academic paper. Polish the writing to meet the academic style,improve the spelling, grammar, clarity, concision and overall readability. When necessary, rewrite the whole sentence. Furthermore, list all modification and explain the reasons to do so in markdown table. Paragraph ：</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>学术-中文转英文</code>:</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">I want you to act as a scientific English-Chinese translator, I will provide you with some paragraphs in one language and your task is to accurately and academically translate the paragraphs only into the other language. Do not repeat the original provided paragraphs after translation. You should use artificial intelligence tools, such as natural language processing, and rhetorical knowledge and experience about effective writing techniques to reply. I&#x27;ll give you my paragraphs as follows, tell me what language it is written in, and then translate：</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>查找语法错误</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Help me ensure that the grammar <span class="keyword">and</span> the spelling <span class="keyword">is</span> correct. Do <span class="keyword">not</span> <span class="keyword">try</span> to polish the text, <span class="keyword">if</span> no mistake <span class="keyword">is</span> found, tell me that this paragraph <span class="keyword">is</span> good.If you find grammar <span class="keyword">or</span> spelling mistakes, please <span class="built_in">list</span> mistakes you find <span class="keyword">in</span> a two-column markdown table,put the original text the first column,put the corrected text <span class="keyword">in</span> the second column <span class="keyword">and</span> highlight the key words you fixed.Finally, please provide the proofreaded text.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>英-中互译</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">你是经验丰富的翻译，请把以下学术文章段落翻译成中文，并同时充分考虑中文的语法、清晰、简洁和整体可读性，必要时，你可以修改整个句子的顺序以确保翻译后的段落符合中文的语言习惯。你需要翻译的文本如下:</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">I want you to act <span class="keyword">as</span> a scientific English-Chinese translator, I will provide you <span class="keyword">with</span> some paragraphs <span class="keyword">in</span> one language,<span class="keyword">and</span> your task <span class="keyword">is</span> to accurately <span class="keyword">and</span> academically translate the paragraphs only into the other language.Do <span class="keyword">not</span> repeat the original provided paragraphs after translation.You should use artificial intelligence tools, such <span class="keyword">as</span> natural language processing, <span class="keyword">and</span> rhetorical knowledge <span class="keyword">and</span> experience about effective writing techniques to reply.I<span class="string">&#x27;ll give you my paragraphs as follows, tell me what language it is written in, and then translate:</span></span><br><span class="line"><span class="string">    </span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英文写作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>latex相关</title>
      <link href="/2024/04/419e.html"/>
      <url>/2024/04/419e.html</url>
      
        <content type="html"><![CDATA[<h2 id="latex相关"><a href="#latex相关" class="headerlink" title="latex相关"></a>latex相关</h2><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;figure&#125;[htbp]</span><br><span class="line">  \centering</span><br><span class="line">  \includegraphics[width=11cm]&#123;图片文件名&#125;</span><br><span class="line">  \caption&#123;注释&#125;</span><br><span class="line">  \label&#123;标签&#125;</span><br><span class="line">\end&#123;figure&#125;</span><br></pre></td></tr></table></figure><p>引用图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~\ref&#123;标签&#125;~</span><br><span class="line">h：表示“here”，告诉LaTeX尽可能将图片放置在代码所在的位置。</span><br><span class="line">t：表示“top”，告诉LaTeX将图片放置在页面的顶部。</span><br><span class="line">b：表示“bottom”，告诉LaTeX将图片放置在页面的底部。</span><br><span class="line">p：表示“page”，告诉LaTeX将图片放置在一页独立成页，而不与文本混排。</span><br></pre></td></tr></table></figure><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><p>快捷键：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;equation&#125;</span><br><span class="line">\label&#123;公式标签&#125;</span><br><span class="line">aaaaaaa</span><br><span class="line">\end&#123;equation&#125;</span><br></pre></td></tr></table></figure><p>引用公式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\eqref&#123;公式标签&#125;</span><br></pre></td></tr></table></figure><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\section&#123;电致变色窗&#125;</span><br><span class="line">\subsection&#123;电致变色窗&#125;</span><br><span class="line">\subsubsection&#123;电致变色窗&#125;</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\cite&#123;BUPT_Thesis_Format_2014&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dim$_&#123;\mathrm&#123;<span class="built_in">input</span>&#125;&#125;$</span><br><span class="line">CNN$_&#123;<span class="number">3</span>\times32\times32&#125;$和CNN$_&#123;<span class="number">6</span>\times8\times8&#125;$</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客搭建</title>
      <link href="/2024/04/hexo_build.html"/>
      <url>/2024/04/hexo_build.html</url>
      
        <content type="html"><![CDATA[<hr><h1 id="Hexo个人博客搭建"><a href="#Hexo个人博客搭建" class="headerlink" title="Hexo个人博客搭建"></a>Hexo个人博客搭建</h1><hr><ol><li>安装nodejs、git</li></ol><p>首先、需要安装 Node.js(<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a>) 和 Git(<a href="https://git-scm.com/downloads)%EF%BC%8C%E5%A4%A7%E5%AE%B6%E5%B0%BD%E9%87%8F%E5%8E%BB%E4%B8%8B%E8%BD%BD.exe%E6%89%A9%E5%B1%95%E5%90%8D%E7%9A%84%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%EF%BC%8C%E8%BF%99%E6%A0%B7%E7%9A%84%E5%A5%BD%E5%A4%84%E6%98%AF%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E3%80%81%E7%9C%81%E5%8E%BB%E4%BA%86%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE%E3%80%82%E5%AE%89%E8%A3%85%E7%89%88%E6%9C%AC%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%9A%84%E7%89%88%E6%9C%AC%E3%80%82%E5%A6%82%E6%9E%9C%E6%9C%89%E9%97%AE%E9%A2%98%E5%8D%B8%E8%BD%BD%E5%AE%89%E8%A3%85%E6%97%A7%E7%89%88%E3%80%82">https://git-scm.com/downloads)，大家尽量去下载.exe扩展名的可执行文件，这样的好处是一键安装、省去了一些配置。安装版本也可以安装最新的版本。如果有问题卸载安装旧版。</a> </p><p><code>验证安装是否成功</code>，打开CMD</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">验证Node.js的方法</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">输入后能够显示版本说明安装成功</span><br></pre></td></tr></table></figure><ol><li><p>在文件夹中右击 <code>Git Bash Here</code> </p></li><li><p>使用npm命令安装Hexo，输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli <span class="comment"># 安装hexo可略过</span></span><br><span class="line">hexo init</span><br><span class="line">hexo clean <span class="comment"># 清除标签</span></span><br><span class="line">hexo new 我的新博客</span><br><span class="line">hexo g <span class="comment">#生成</span></span><br><span class="line">hexo s <span class="comment">#启动服务预览</span></span><br><span class="line">git config --<span class="keyword">global</span> user.name <span class="string">&quot;wbupt&quot;</span></span><br><span class="line">git config --<span class="keyword">global</span> user.email <span class="string">&quot;34@qq.com&quot;</span></span><br><span class="line">npm install hexo-deployer-git --save <span class="comment"># 安装上传文件</span></span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus <span class="comment"># 安装 butterfly插件</span></span><br><span class="line">npm install hexo-generator-index-pin-top --save <span class="comment"># 文章置顶插件</span></span><br><span class="line">npm install hexo-hide-posts --save <span class="comment"># 隐藏文章</span></span><br><span class="line">npm install hexo-math --save <span class="comment"># 安装公式</span></span><br><span class="line">npm install hexo-wordcount --save <span class="comment"># 安装字数统计</span></span><br><span class="line"></span><br><span class="line">hexo d <span class="comment">#部署</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="配置文件设置："><a href="#配置文件设置：" class="headerlink" title="配置文件设置："></a>配置文件设置：</h2><p><code>_config.yml</code> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">skip_render: <span class="comment">#跳过文件</span></span><br><span class="line">  - <span class="string">&quot;HTML/*&quot;</span></span><br><span class="line">  - <span class="string">&quot;about/*&quot;</span></span><br><span class="line">banner_img: <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo个人博客搭建</span><br><span class="line">tags: [标签,标签<span class="number">2</span>,标签<span class="number">3</span>] <span class="comment"># 标题</span></span><br><span class="line">category: 沧州植物鱼<span class="comment"># 分类</span></span><br><span class="line">isTop: true</span><br><span class="line">abbrlink: <span class="number">20929</span><span class="comment"># 文章地址</span></span><br><span class="line">date: <span class="number">2023</span>-03-<span class="number">14</span> <span class="number">10</span>:<span class="number">19</span>:08<span class="comment"># 写作时间</span></span><br><span class="line">feature:</span><br><span class="line">sticky: <span class="number">101</span></span><br><span class="line">top: <span class="number">101</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>刘玉敏签名</p><p><img src="https://s2.loli.net/2023/12/06/iNYf4C2aOPX3dK1.png" alt="刘玉敏签名"></p><p><img src="https://s2.loli.net/2024/04/25/e2gSuhyKQYfwT13.png" alt="刘玉敏"></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自己的文章</title>
      <link href="/2024/04/my_paper.html"/>
      <url>/2024/04/my_paper.html</url>
      
        <content type="html"><![CDATA[<h1 id="自己的文章"><a href="#自己的文章" class="headerlink" title="自己的文章"></a>自己的文章</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[1] Wang X, Chen S, Liu Y, et al. Design of asymmetric-structured metasurfaces for smart windows[J]. Results in Materials, 2023, 17: 100363.</span><br><span class="line">[2] Wang X, Chen S, Liu Y, et al. Design of independent and radiation modulation enhanced electrochromic windows in visible and infrared ranges[J]. Optics &amp; Laser Technology, 2023, 167: 109774.</span><br><span class="line">[3] Wang X, Chen S, Chen L, et al. A hybrid MLP-CNN model based on positional encoding for daytime radiative cooler[J]. Optics Communications, 2024, 560: 130448.</span><br><span class="line">[4] Wang X, Liu Y. Design of Electrochromic Asymmetric Multilayered Structure for Smart Windows[C]//2022 Asia Communications and Photonics Conference (ACP). IEEE, 2022: 2107-2110.</span><br></pre></td></tr></table></figure><h2 id="参加的项目"><a href="#参加的项目" class="headerlink" title="参加的项目"></a>参加的项目</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">科研启动项目：超构表面的热管理调控的理论和实验研究</span><br><span class="line">校级项目：面向智能窗热管理的应用研究</span><br></pre></td></tr></table></figure><h2 id="1-Result-in-Materials"><a href="#1-Result-in-Materials" class="headerlink" title="1 Result in Materials"></a>1 Result in Materials</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Design of asymmetric-structured metasurfaces <span class="keyword">for</span> smart windows</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.sciencedirect.com/science/article/pii/S2590048X23000018?via%3Dihub</span><br></pre></td></tr></table></figure><div>  <iframe src="/pdf/1. Result in Materials 王学玉.pdf" width="100%" height="500px" frameborder="0"></iframe></div> <h2 id="2-Optics-Laser-Technology"><a href="#2-Optics-Laser-Technology" class="headerlink" title="2 Optics &amp; Laser Technology"></a>2 Optics &amp; Laser Technology</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Design of independent <span class="keyword">and</span> radiation modulation enhanced electrochromic windows <span class="keyword">in</span> visible <span class="keyword">and</span> infrared ranges</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.sciencedirect.com/science/article/<span class="built_in">abs</span>/pii/S0030399223006679</span><br></pre></td></tr></table></figure><div>  <iframe src="/pdf/2. OLT 王学玉.pdf" width="100%" height="500px" frameborder="0"></iframe></div> <h2 id="3-Optics-Communications"><a href="#3-Optics-Communications" class="headerlink" title="3 Optics Communications"></a>3 Optics Communications</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A hybrid MLP-CNN model based on positional encoding <span class="keyword">for</span> daytime radiative cooler</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.sciencedirect.com/science/article/pii/S0030401824001858?dgcid=coauthor</span><br></pre></td></tr></table></figure><div>  <iframe src="/pdf/3. OC 王学玉.pdf" width="100%" height="500px" frameborder="0"></iframe></div> <h2 id="4-ACP"><a href="#4-ACP" class="headerlink" title="4 ACP"></a>4 ACP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Design of Electrochromic Asymmetric Multilayered Structure <span class="keyword">for</span> Smart Windows</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2022</span> Asia Communications <span class="keyword">and</span> Photonics Conference (ACP)</span><br><span class="line">https://ieeexplore.ieee.org/abstract/document/<span class="number">10088484</span></span><br></pre></td></tr></table></figure><div>  <iframe src="/pdf/1. Frontiers.pdf" width="100%" height="500px" frameborder="0"></iframe></div> ]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>深度学习总结</title>
      <link href="/2023/03/40131.html"/>
      <url>/2023/03/40131.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>I:\PyTorch深度学习实践</p></blockquote><h3 id="经典代码"><a href="#经典代码" class="headerlink" title="经典代码"></a>经典代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.optim <span class="keyword">import</span> optimizer</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> torch.optim <span class="keyword">as</span> optim</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># from main_09 import criterion</span></span><br><span class="line">start_time = time.time()</span><br><span class="line"><span class="comment"># Important</span></span><br><span class="line">device = torch.device(<span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span>)  <span class="comment"># Important</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;device=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(device))  <span class="comment"># Important</span></span><br><span class="line"></span><br><span class="line">batch_size = <span class="number">64</span></span><br><span class="line">transform = transforms.Compose([transforms.ToTensor(), transforms.Normalize((<span class="number">0.1307</span>,), (<span class="number">0.3081</span>,))])  <span class="comment"># 均值 标准差</span></span><br><span class="line">train_dataset = datasets.MNIST(root=<span class="string">&#x27;mnist&#x27;</span>, train=<span class="literal">True</span>, download=<span class="literal">True</span>, transform=transform)</span><br><span class="line">train_loader = DataLoader(train_dataset, shuffle=<span class="literal">True</span>, batch_size=batch_size)</span><br><span class="line">test_dataset = datasets.MNIST(root=<span class="string">&#x27;mnist&#x27;</span>, train=<span class="literal">False</span>, download=<span class="literal">True</span>, transform=transform)</span><br><span class="line">test_loader = DataLoader(test_dataset, shuffle=<span class="literal">False</span>, batch_size=batch_size)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Net</span>(torch.nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Net, self).__init__()</span><br><span class="line">        self.conv1 = torch.nn.Conv2d(<span class="number">1</span>, <span class="number">10</span>, kernel_size=<span class="number">5</span>)</span><br><span class="line">        self.conv2 = torch.nn.Conv2d(<span class="number">10</span>, <span class="number">20</span>, kernel_size=<span class="number">5</span>)</span><br><span class="line">        self.pooling = torch.nn.MaxPool2d(<span class="number">2</span>)</span><br><span class="line">        self.fc = torch.nn.Linear(<span class="number">320</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="comment"># Flatten data from (n, 1, 28, 28) to (n, 784)</span></span><br><span class="line">        batch_size = x.size(<span class="number">0</span>)</span><br><span class="line">        x = F.relu(self.pooling(self.conv1(x)))</span><br><span class="line">        x = F.relu(self.pooling(self.conv2(x)))</span><br><span class="line">        x = x.view(batch_size, -<span class="number">1</span>)  <span class="comment"># flatten</span></span><br><span class="line">        x = self.fc(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model = Net()</span><br><span class="line">model.to(device)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct criterion and optimizer</span></span><br><span class="line">criterion = torch.nn.CrossEntropyLoss()</span><br><span class="line">optimizer = optim.SGD(model.parameters(), lr=<span class="number">0.01</span>, momentum=<span class="number">0.5</span>)  <span class="comment"># 冲量0.5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train</span>(<span class="params">epoch</span>):</span><br><span class="line">    running_loss = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> batch_idx, data <span class="keyword">in</span> <span class="built_in">enumerate</span>(train_loader, <span class="number">0</span>):</span><br><span class="line">        inputs, target = data</span><br><span class="line">        inputs, target = inputs.to(device), target.to(device)</span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        <span class="comment"># forward + backward + update</span></span><br><span class="line">        outputs = model(inputs)</span><br><span class="line">        loss = criterion(outputs, target)</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line">        running_loss += loss.item()</span><br><span class="line">        <span class="keyword">if</span> batch_idx % <span class="number">300</span> == <span class="number">299</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[%d, %5d] loss: %.3f&#x27;</span> % (epoch + <span class="number">1</span>, batch_idx + <span class="number">1</span>, running_loss / <span class="number">2000</span>))</span><br><span class="line">            running_loss = <span class="number">0.0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>():</span><br><span class="line">    correct = <span class="number">0</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> test_loader:</span><br><span class="line">            inputs, target = data</span><br><span class="line">            inputs, target = inputs.to(device), target.to(device)</span><br><span class="line">            outputs = model(inputs)</span><br><span class="line">            _, predicted = torch.<span class="built_in">max</span>(outputs.data, dim=<span class="number">1</span>)</span><br><span class="line">            total += target.size(<span class="number">0</span>)</span><br><span class="line">            correct += (predicted == target).<span class="built_in">sum</span>().item()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Accuracy on test set: %d %% [%d/%d]&#x27;</span> % (<span class="number">100</span> * correct / total, correct, total))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        train(epoch)</span><br><span class="line">        <span class="keyword">if</span> epoch % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            test()</span><br><span class="line">            <span class="keyword">import</span> time</span><br><span class="line">            end_time = time.time()  <span class="comment"># calculate time</span></span><br><span class="line">            <span class="keyword">if</span> end_time - start_time &gt;= <span class="number">3600</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125; h&quot;</span>.<span class="built_in">format</span>(<span class="built_in">round</span>((end_time - start_time) / <span class="number">3600</span>, <span class="number">2</span>)))</span><br><span class="line">            <span class="keyword">elif</span> end_time - start_time &gt;= <span class="number">60</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125; min&quot;</span>.<span class="built_in">format</span>(<span class="built_in">round</span>((end_time - start_time) / <span class="number">60</span>, <span class="number">2</span>)))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125; s&quot;</span>.<span class="built_in">format</span>(<span class="built_in">round</span>((end_time - start_time), <span class="number">1</span>)))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
